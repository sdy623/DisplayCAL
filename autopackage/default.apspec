# -*- shell-script -*-
# Generated by mkapspec 0.5
[Meta]
ShortName: dispcalgui
SoftwareVersion: `python -c "from dispcalGUI import meta;print meta.version"`
DisplayName: dispcalGUI - Display Calibration
RootName: @dispcalgui.hoech.net/dispcalgui:$SOFTWAREVERSION
RootInstallOnly: Yes
URL: http://dispcalGUI.hoech.net
Summary: A graphical user interface for the Argyll CMS display calibration utilities
Maintainer: Florian Höch <dispcalGUI@hoech.net>
Packager: Florian Höch <dispcalGUI@hoech.net>
PackageVersion: 1
CPUArchitectures: x86 x86_64
AutopackageTarget: 1.4
Type: Application
License: GNU General Public License (GPL)

[Description]
A graphical user interface for the Argyll CMS display calibration utilities.

[BuildPrepare]
# If you're using autotools, the default should be enough.
# prepareBuild will set up apbuild and run configure for you. If you
# need to pass arguments to configure, just add them to prepareBuild:
# prepareBuild --enable-foo --disable-bar

# pushd "$source_dir" > /dev/null
# export CC=apgcc
# /usr/bin/python dispcalGUI/setup.py build_ext -i --use-distutils
# popd > /dev/null

pushd "$source_dir" > /dev/null
python setup.py install_egg_info --install-dir="$build_root/lib/python/site-packages" --use-distutils

mkdir -p "$build_root/bin"
cp "$source_dir/scripts/dispcalGUI" "$build_root/bin"

mkdir -p "$build_root/lib/python/site-packages/dispcalGUI"
cp "$source_dir/dispcalGUI/"*.py "$build_root/lib/python/site-packages/dispcalGUI"
cp "$source_dir/dispcalGUI/"*.so.tar "$build_root/lib/python/site-packages/dispcalGUI"

mkdir -p "$build_root/share"
tar --exclude=".svn" --exclude="*~" --exclude="*.c" --exclude="*.icns" --exclude="*.ico" --exclude="*.py*" --exclude="*.so" --exclude="*.tar" -pcf "$build_root/share/dispcalGUI.tar" dispcalGUI
popd > /dev/null
pushd "$build_root/share" > /dev/null
tar -xf dispcalGUI.tar
rm dispcalGUI.tar
popd > /dev/null

mkdir -p "$build_root/share/doc/dispcalGUI-$SOFTWAREVERSION"
pushd "$source_dir" > /dev/null
tar --exclude="Thumbs.db" --exclude=".svn" -pcf "$build_root/share/doc/dispcalGUI-$SOFTWAREVERSION/screenshots.tar" screenshots
tar --exclude="Thumbs.db" --exclude=".svn" -pcf "$build_root/share/doc/dispcalGUI-$SOFTWAREVERSION/theme.tar" theme
popd > /dev/null
pushd "$build_root/share/doc/dispcalGUI-$SOFTWAREVERSION" > /dev/null
tar -xf screenshots.tar
rm screenshots.tar
tar -xf theme.tar
rm theme.tar
popd > /dev/null
cp "$source_dir/LICENSE.txt" "$build_root/share/doc/dispcalGUI-$SOFTWAREVERSION"
cp "$source_dir/README.html" "$build_root/share/doc/dispcalGUI-$SOFTWAREVERSION"

# Move application icons
for size in "16x16" "22x22" "24x24" "32x32" "48x48" "256x256" ; do
	mkdir -p "$build_root/share/icons/hicolor/$size/apps"
	mv "$build_root/share/dispcalGUI/theme/icons/$size/dispcalGUI.png" "$build_root/share/icons/hicolor/$size/apps"
done

# Remove empty directories
for size in "22x22" "24x24" "48x48" "256x256" ; do
	rm -rf "$build_root/share/dispcalGUI/theme/icons/$size"
done

mkdir -p "$build_root/share/applications"
cp "$source_dir/misc/dispcalGUI.desktop" "$build_root/share/applications"

# mkdir -p "$build_root/share/PolicyKit/policy"
# cp "$source_dir/misc/color-device-file.policy" "$build_root/share/PolicyKit/policy"

# mkdir -p "$build_root/share/hal/fdi/policy/10osvendor"
# cp "$source_dir/misc/19-color.fdi" "$build_root/share/hal/fdi/policy/10osvendor"

mkdir -p "$build_root/etc/udev/rules.d"
cp "$source_dir/misc/92-Argyll.rules" "$build_root/etc/udev/rules.d"
cp "$source_dir/misc/45-Argyll.rules" "$build_root/etc/udev/rules.d"

mkdir -p "$build_root/etc/hotplug/usb"
cp "$source_dir/misc/Argyll" "$build_root/etc/hotplug/usb"
cp "$source_dir/misc/Argyll.usermap" "$build_root/etc/hotplug/usb"

# mkdir -p "$build_root/etc/udev/permissions.d"
# cp "$source_dir/misc/10-Argyll.permissions" "$build_root/etc/udev/permissions.d"


[BuildUnprepare]
# If you're using prepareBuild above, there is no need to change this!
# unprepareBuild


[Globals]
# Variables declared in this section will be available in all other sections


[Prepare]
function requireLibs() {
	pushOptE; set +e;
	for lib in $*; do
		outputTest $lib
		if `testForLib $lib.so`; then
			outputTestPass
		else
			outputTestFail
			outputFail "Required library not found."
			popOptE
			return 1
		fi
	done
	popOptE
	return 0
}

require '@python.org/python' 2.5 2.6 2.7

requireAtLeast '@wxpython.org/python-wxgtk:2.8'

requireLibs libc libdl libpthread libX11 libXau libXext libXinerama libXrandr libXrender libXxf86vm

testForPythonModule numpy || (
	testForPythonModule numarray || (
		testForPythonModule Numeric || recommendAtLeast '@numpy.scipy.org/numpy:1.1'
	)
)

removeOwningPackage "$PREFIX/bin/dispcalGUI"


[Imports]
# This command will tell makepackage what to include in the package.
# The selection comes from the files created by 'make install' or equivalent.
# Usually, you can leave this at the default
echo '*' | import


[Install]
python_version=`python -c "import sys;print sys.version[:3]"`

python=`which python$python_version 2>/dev/null || which python`
safeSed bin/dispcalGUI "s|/usr/bin/env python|$python|"

cd lib/python/site-packages/dispcalGUI
uname -m | grep "64" && (
	tar -xf RealDisplaySizeMM.py$python_version.x86_64.so.tar
) || (
	tar -xf RealDisplaySizeMM.py$python_version.x86.so.tar
)
rm *.tar
cd ../../../..

python -c "import compileall; compileall.compile_dir('lib/python/site-packages/dispcalGUI')"
copyFiles lib/python/site-packages/dispcalGUI "`getPythonLibDir`"

installData share/dispcalGUI share/doc
installExe bin/dispcalGUI
installIcon share/icons/hicolor
# installMenuItem changes the .desktop file to include so-called 'Actions' 
# which makes the menu entry vanish in recent GNOME versions after logout! So 
# we only use it to make our app appear under 'desktop applications' in 
# autopackage's 'manage 3rd party software' utility
installMenuItem "Graphics" share/applications/dispcalGUI.desktop
# Install our proper one
which xdg-desktop-menu > /dev/null 2>&1 && xdg-desktop-menu install --novendor share/applications/dispcalGUI.desktop || true

if [ `whoami` = "root" ]; then
	# if [ -e "/usr/share/PolicyKit/policy" ] && [ -e "/usr/share/hal/fdi/policy/10osvendor" ]; then
		# # USB and Serial access using PolicyKit V0.6 + HAL (recent versions of Linux)
		# copyFile "share/PolicyKit/policy/color-device-file.policy" "/usr/share/PolicyKit/policy/color-device-file.policy"
		# copyFile "share/hal/fdi/policy/10osvendor/19-color.fdi" "/usr/share/hal/fdi/policy/10osvendor/19-color.fdi"
	# fi
	if [ -e "/etc/udev/rules.d" ]; then
		ls /dev/bus/usb/*/* > /dev/null 2>&1 && (
			# USB and serial instruments using udev, where udev already creates /dev/bus/usb/00X/00X devices
			if [ ! -e "/etc/udev/rules.d/55-Argyll.rules" ]; then
				copyFile "etc/udev/rules.d/92-Argyll.rules" "/etc/udev/rules.d/55-Argyll.rules"
			fi
		) || (
			# USB using udev, where there are NOT /dev/bus/usb/00X/00X devices
			if [ ! -e "/etc/udev/rules.d/45-Argyll.rules" ]; then
				copyFile "etc/udev/rules.d/45-Argyll.rules" "/etc/udev/rules.d/45-Argyll.rules"
			fi
		)
	else
		if [ -e "/etc/hotplug"]; then
			# USB using hotplug and Serial using udev (older versions of Linux)
			if [ ! -e "/etc/hotplug/usb/Argyll" ]; then
				copyFile "etc/hotplug/usb/Argyll" "/etc/hotplug/usb/Argyll"
			fi
			if [ ! -e "/etc/hotplug/usb/Argyll.usermap" ]; then
				copyFile "etc/hotplug/usb/Argyll.usermap" "/etc/hotplug/usb/Argyll.usermap"
			fi
		fi
		# if [ -e "/etc/udev/permissions.d" ]; then
			# # Serial instruments using udev (older versions of Linux)
			# copyFile "etc/udev/permissions.d/10-Argyll.permissions" "/etc/udev/permissions.d/10-Argyll.permissions"
		# fi
	fi
fi

[Uninstall]
# Leaving this at the default is safe unless you use custom commands in
# "Install" to create files. All autopackage API functions 
# that installs files are logged.
uninstallFromLog
which xdg-desktop-menu > /dev/null 2>&1 && xdg-desktop-menu uninstall dispcalGUI.desktop || true

