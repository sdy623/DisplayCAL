; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#include ReadReg(HKEY_LOCAL_MACHINE,'Software\Sherlock Software\InnoTools\Downloader','ScriptPath','')

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppID={{4714199A-0D66-4E69-97FF-7B54BFF80B88}
AppCopyright=%(AppCopyright)s
AppName=dispcalGUI
AppVerName=dispcalGUI %(AppVerName)s
AppPublisher=%(AppPublisher)s
AppPublisherURL=%(AppPublisherURL)s
AppSupportURL=%(AppSupportURL)s
AppUpdatesURL=%(AppUpdatesURL)s
LicenseFile=..\LICENSE.txt
OutputDir=.
OutputBaseFilename=dispcalGUI-0install-Setup
SetupIconFile=..\dispcalGUI\theme\icons\dispcalGUI.ico
Compression=lzma/Max
SolidCompression=true
VersionInfoVersion=%(VersionInfoVersion)s
VersionInfoDescription=dispcalGUI Setup
VersionInfoTextVersion=%(VersionInfoTextVersion)s
WizardImageFile=..\misc\media\install.bmp
WizardSmallImageFile=..\misc\media\icon-install.bmp
AppVersion=%(AppVersion)s
AlwaysShowComponentsList=false
ShowLanguageDialog=auto
MinVersion=0,5.1.2600
CreateAppDir=False
UsePreviousGroup=False
DisableProgramGroupPage=yes
Uninstallable=no

[Languages]
Name: english; MessagesFile: ..\misc\InnoSetup\v5\Default.isl;
Name: french; MessagesFile: ..\misc\InnoSetup\v5\Languages\French.isl;
Name: german; MessagesFile: ..\misc\InnoSetup\v5\Languages\German.isl;
Name: italian; MessagesFile: ..\misc\InnoSetup\v5\Languages\Italian.isl;
Name: spanish; MessagesFile: ..\misc\InnoSetup\v5\Languages\Spanish.isl;

[Tasks]
Name: calibrationloadinghandledbydispcalgui; Description: {cm:CalibrationLoadingHandledByDispcalGUI}; Flags: exclusive; GroupDescription: {cm:CalibrationLoading};
Name: calibrationloadinghandledbyos; Description: {cm:CalibrationLoadingHandledByOS}; Flags: exclusive unchecked; GroupDescription: {cm:CalibrationLoading}; MinVersion: 0,6.1.7600;
Name: web; Description: {cm:ProgramOnTheWeb,dispcalGUI};
Name: runentry; Description: {cm:LaunchProgram,dispcalGUI};

[Files]
Source: SetACL.exe; DestDir: {tmp}; Flags: deleteafterinstall overwritereadonly;

[Run]
Filename: {tmp}\SetACL.exe; Parameters: "-on {commonappdata}\dispcalGUI -ot file -actn ace -ace ""n:S-1-5-32-545;p:read_ex;s:y;i:sc,so;m:set;w:dacl"""; Flags: RunHidden;
Filename: {tmp}\SetACL.exe; Parameters: "-on {commonappdata}\dispcalGUI -ot file -actn ace -ace ""n:S-1-5-32-545;p:write;s:y;i:io,sc,so;m:grant;w:dacl"""; Flags: RunHidden;

[Dirs]
Name: {commonappdata}\dispcalGUI; Permissions: users-modify;

[Code]
function Get_UninstallString: string;
begin
	if not RegQueryStringValue(HKLM, ExpandConstant('SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{#emit SetupSetting("AppId")}_is1'), 'UninstallString', Result) then
		RegQueryStringValue(HKLM, ExpandConstant('SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\{#emit SetupSetting("AppId")}_is1'), 'UninstallString', Result);
end;

function Uninstall_Installed_Version: string;
var
	UninstallString: string;
	ResultCode: integer;
begin
	Result := '';
	UninstallString := Get_UninstallString();
	if UninstallString <> '' then begin
		UninstallString := RemoveQuotes(UninstallString);
		if not Exec(UninstallString, '/SILENT /NORESTART /SUPPRESSMSGBOXES', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) then
			Result := SysErrorMessage(ResultCode);
	end else
		Result := FmtMessage(CustomMessage('UninstallStringEmpty'), ['dispcalGUI']);
end;

function ZeroInstall_IsInstalled: boolean;
begin
	Result := RegKeyExists(HKLM, 'SOFTWARE\Zero Install') or RegKeyExists(HKCU, 'SOFTWARE\Zero Install');
end;

function Get_ZeroInstall_InstallLocation: string;
begin
	if not RegQueryStringValue(HKLM, 'SOFTWARE\Zero Install', 'InstallLocation', Result) then
		RegQueryStringValue(HKCU, 'SOFTWARE\Zero Install', 'InstallLocation', Result);
end;

procedure InitializeWizard();
begin
	if not ZeroInstall_IsInstalled() then begin
		ITD_Init;
		ITD_AddFile('http://0install.de/files/zero-install.exe', ExpandConstant('{tmp}\zero-install.exe'));
		ITD_DownloadAfter(wpReady);
	end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
	ErrorCode: integer;
	ZeroInstall: string;
	Uninstall_Result: string;
begin
	if CurStep=ssInstall then begin
		if not ZeroInstall_IsInstalled() then begin
			if not Exec(ExpandConstant('{tmp}\zero-install.exe'), '/SP- /SILENT', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode) then
				SuppressibleMsgBox(SysErrorMessage(ErrorCode), mbCriticalError, MB_OK, MB_OK);
			if not ZeroInstall_IsInstalled() then
				Abort();
		end;
		if Get_UninstallString() <> '' then begin
			Uninstall_Result := Uninstall_Installed_Version();
			if Uninstall_Result <> '' then
				SuppressibleMsgBox(Uninstall_Result, mbInformation, MB_OK, MB_OK);
		end;
		ZeroInstall := Get_ZeroInstall_InstallLocation() + '\0install-win.exe';
		if not Exec(ZeroInstall, 'integrate --add=icons --machine --refresh %(URL)s0install/dispcalGUI.xml', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode) then
			SuppressibleMsgBox(SysErrorMessage(ErrorCode), mbError, MB_OK, MB_OK);
		if IsTaskSelected('calibrationloadinghandledbydispcalgui') then begin
			CreateShellLink(ExpandConstant('{commonstartup}\dispcalGUI Profile Loader.lnk'), 'dispcalGUI Profile Loader', ZeroInstall, 'run --command=run-apply-profiles %(URL)s0install/dispcalGUI.xml', '', '', 0, SW_SHOWNORMAL);
			if not Exec(ZeroInstall, 'run --command=set-calibration-loading %(URL)s0install/dispcalGUI.xml', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode) then
				SuppressibleMsgBox(SysErrorMessage(ErrorCode), mbError, MB_OK, MB_OK);
		end;
		if IsTaskSelected('calibrationloadinghandledbyos') then begin
			if not Exec(ZeroInstall, 'run --command=set-calibration-loading -- %(URL)s0install/dispcalGUI.xml --os', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode) then
				SuppressibleMsgBox(SysErrorMessage(ErrorCode), mbError, MB_OK, MB_OK);
		end;
	end;
	if (CurStep=ssDone) and not WizardSilent() then begin
		if IsTaskSelected('web') then begin
			if not ShellExecAsOriginalUser('', '%(URL)s', '', '', SW_SHOW, ewNoWait, ErrorCode) then
				SuppressibleMsgBox(SysErrorMessage(ErrorCode), mbError, MB_OK, MB_OK);
		end;
		if IsTaskSelected('runentry') then begin
			ZeroInstall := Get_ZeroInstall_InstallLocation() + '\0install-win.exe';
			if not ExecAsOriginalUser(ZeroInstall, 'run %(URL)s0install/dispcalGUI.xml', '', SW_SHOW, ewNoWait, ErrorCode) then
				SuppressibleMsgBox(SysErrorMessage(ErrorCode), mbError, MB_OK, MB_OK);
		end;
	end;
end;
